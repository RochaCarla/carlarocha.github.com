I"≈ <p>Esse √© um guia para o ensino de Ruby em uma turma de programa√ß√£o de computadores.</p>

<p>Esse guia cobre os seguintes pontos:</p>

<ol>
  <li><a href="/ruby-guide/vars">Atribui√ß√£o de vari√°veis</a></li>
  <li><a href="/ruby-guide/types">Tipos de dados b√°sicos</a></li>
  <li>Express√µes e operadores</li>
  <li>Controle de fluxo</li>
  <li>Fun√ß√µes</li>
  <li>Arrays</li>
  <li>Matrizes</li>
  <li>Hashes</li>
  <li>Entrada e sa√≠da</li>
  <li>Classes e Objetos</li>
  <li>Tratamento de excess√£o</li>
  <li>Teste de unidade</li>
  <li>Meta-programa√ß√£o</li>
</ol>

<h2 id="porque-ruby">Porque Ruby?</h2>

<p>Ruby √© uma linguagem de programa√ß√£o de prop√≥sito geral, de alto n√≠vel e interpretada (e n√£o compilada). Ela foi desenhada pelo Japones Yukihiro ‚ÄúMatz‚Äù Matsumoto na d√©cada de 90. O c√≥digo fonte da linguagem est√° dispon√≠vel como software livre, licenciado pela licen√ßa BSD.</p>

<p>Ruby √© uma linguagem multi-paradigma, ou seja, programas escritos em Ruby podem ser feitos no paradigma procedural, orientado a objetos ou funcional. No entanto, Ruby √© mais conhecida por ser uma linguagem que leva orienta√ß√£o a objetos a s√©rio. Como vamos ver ao longo desse guia, <strong>tudo s√£o objetos</strong>.</p>

<p>Ruby tamb√©m √© dinamicamente tipada, ou seja, o sistema de tipos √© capaz de inferir qual o tipo de dados sem que o programador precise explicitamente coloc√°-lo.</p>

<p>Ruby tamb√©m conta com um coletor de lixo, ou seja, n√£o √© necess√°rio desalocar vari√°veis (assim como se √© feito com C). A desaloca√ß√£o de vari√°veis que n√£o est√£o sendo mais utilizadas s√£o feitas de maneira autom√°tica, por esse software chamado garbage collector.</p>

<p>Essas caracter√≠sticas colocam Ruby como uma linguagem moderna, que est√° em constante evolu√ß√£o (a sua vers√£o 3.0 foi lan√ßada em 25 de Dezembro de 2020).</p>

<p>Embora hoje em dia existam dezenas de outras alternativas para o ensino e pr√°tica de programa√ß√£o (como Swift, Elixir, Kotlin, etc), ainda acredito que o uso de Ruby se destaca perante as demais. Algumas raz√µes:</p>

<ul>
  <li>
    <p>A sintaxe de Ruby √© ligeiramente diferente da sintaxe de outras linguagens de programa√ß√£o de nicho similares, como Python ou Perl. A sintaxe de Ruby pode parecer menos intuitiva que a sintaxe de Python; no entanto, √© muito mais agrad√°vel que a sintaxe de Perl. Dessa forma, Ruby pode ser considerada uma excelente op√ß√£o para aqueles que j√° conhecem uma linguagem e gostariam de entender um pouco mais sobre outros formas de desenvolvimento de programas.</p>
  </li>
  <li>
    <p>Ruby √© uma excelente op√ß√£o para desenvolvimento web. Parte disso √© devido a popularidade do framework ‚ÄúRails‚Äù, que n√£o s√≥ introduziu mas tamb√©m revolucionou muitas pr√°ticas de desenvolvimento web. Ademais, a integra√ß√£o com frameworks JavaScript √© facilitada, fazendo com que Ruby (e o Rails) sejam facilmente utilizados no backend do desenvolvimento web.</p>
  </li>
  <li>
    <p>Ruby n√£o √© mais hipster. Ruby passou no teste do tempo e da euforia da novidade. Programar Ruby n√£o √© mais t√£o <em>cool</em> como programar em Node.js ou aquela nova linguagem que acabou de aparecer. Hoje Ruby √© uma linguagem madura e se mant√©m como uma das linguagens mais usada no mundo.</p>
  </li>
</ul>

<h2 id="instala√ß√£o">Instala√ß√£o</h2>

<p>Para instala√ß√µes de vers√µes mais recentes (durante a escrita deste guia, recomendo a instala√ß√£o da vers√£o 3.0+), sugiro o download direto do site oficial da linguagem: <a href="https://www.ruby-lang.org/en/documentation/installation/">https://www.ruby-lang.org/en/documentation/installation/</a>.</p>

<p>Ap√≥s a instala√ß√£o, abra o terminal e rode os commandos <code class="highlighter-rouge">ruby -v</code> (que mostrar√° a vers√£o instalada) e <code class="highlighter-rouge">irb</code> (que abrir√° o interpretador interativo da linguagem; Interactive Ruby).</p>

<p>N√£o se surpreenda caso voc√™ j√° tenha o Ruby instalado no seu computador por padr√£o. Isso pode acontecer caso voc√™ use alguma distribui√ß√£o Linux ou MacOS.</p>

<h2 id="hello-world">Hello world</h2>

<p>Ap√≥s terminar a instala√ß√£o do Ruby, para fazer seu primeiro programa em Ruby, abra o interpretador (<code class="highlighter-rouge">irb</code>) e digite:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">puts</span> <span class="s2">"Ol√° mundo!"</span> <span class="c1"># =&gt; nil</span>
</code></pre></div></div>

<p>Embora esse programa seja incrivelmente pequeno, √© poss√≠vel ainda assim fazer alguns coment√°rios.</p>

<p>Primeiro, a instru√ß√£o <code class="highlighter-rouge">puts</code> √© um comando de Ruby que realiza uma impress√£o no terminal (similar ao <code class="highlighter-rouge">printf</code> ou <code class="highlighter-rouge">print</code> de outras linguagens de programa√ß√£o).</p>

<p>Segundo, perceba tamb√©m que n√£o foi fornecido um par√™nteses. Os par√™nteses, no entanto, podem ser fornecidos (tente executar com <code class="highlighter-rouge">puts ("Ol√° mundo!")</code>) mas s√£o facultado pois acredita-se que sua omiss√£o torna a leitura do c√≥digo mais flu√≠da. De toda forma, como eles podem ser fornecidos, fica a cargo do programador e sua equipe a decis√£o de fornece-los ou n√£o. Neste guia, optaremos por n√£o utilizar par√™nteses.</p>

<p>Terceiro, note que, ap√≥s a execu√ß√£o do nosso programa, tivemos duas sa√≠das. A primeira sa√≠da foi de fato a impress√£o do texto <code class="highlighter-rouge">"Ol√° mundo!"</code>, enquanto que a segunda sa√≠da foi o estranho <code class="highlighter-rouge">=&gt; nil</code>. A seta <code class="highlighter-rouge">=&gt;</code> apenas indica o leitor que houve alguma sa√≠da. J√° o <code class="highlighter-rouge">nil</code> √© o resultado da express√£o. O comando <code class="highlighter-rouge">puts</code> sempre avalia para <code class="highlighter-rouge">nil</code> (que √© um outro nome para um item nulo).</p>

<p>Por fim, perceba que h√° tamb√©m uma cerquilha (<code class="highlighter-rouge">#</code>) antes da seta (<code class="highlighter-rouge">=&gt;</code>). Essa cerquilha indica um coment√°rio no c√≥digo. Qualquer instru√ß√£o ap√≥s o coment√°rio n√£o √© interpretada. Por n√£o serem trechos de c√≥digo execut√°veis, coment√°rios podem ser utilizados para melhor descrever a inten√ß√£o de um c√≥digo.</p>

<p>Para fechar o <code class="highlighter-rouge">irb</code>, digite <code class="highlighter-rouge">exit</code> ou pressione <code class="highlighter-rouge">CTRL+D</code>.</p>

<h3 id="mas-o-que-significa-exatamente-avaliar-uma-express√£o">Mas o que significa exatamente ‚Äòavaliar uma express√£o‚Äô?</h3>

<p>Uma express√£o √© uma entidade que combina constantes, vari√°veis, fun√ß√µes e operadores. Uma entidade √© interpretada e, ap√≥s computada, retorna o valor avaliado.</p>

<p>Em um n√≠vel mais elementar, poder√≠amos dizer que programa√ß√£o consiste basicamente em aplicar operadores a operandos. Operadores podem ser coisas simples como <code class="highlighter-rouge">+</code> e  <code class="highlighter-rouge">-</code>.</p>

<p>Logo, se execut√°ssemos a express√£o <code class="highlighter-rouge">2 + 3</code> no interpretador, ter√≠amos a seguinte sa√≠da esperada:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="c1"># =&gt; 5</span>
</code></pre></div></div>

<p>Vamos entender um pouco mais sobre express√µes no cap√≠tulo sobre express√µes e operadores desse guia.</p>

<p>Por hora, encerramos a primeira parte do nosso guia. No pr√≥ximo cap√≠tulo falaremos sobre <a href="/guide/ruby/vars">atribui√ß√£o de vari√°veis</a>.</p>

<h2 id="exerc√≠cios-de-fixa√ß√£o">Exerc√≠cios de fixa√ß√£o</h2>

<ul>
  <li>
    <p>Em vez de executar direto do interpretador, crie um arquivo chamado <code class="highlighter-rouge">hello.rb</code>. Coloque nesse arquivo o comando que imprime o texto <code class="highlighter-rouge">"Hello world!"</code>. Para executar, fa√ßa <code class="highlighter-rouge">ruby hello.rb</code>.</p>
  </li>
  <li>
    <p>Quais s√£o os operadores mais conhecidos em Ruby?</p>
  </li>
  <li>
    <p>Um mesmo operador pode ser usado em contexto diferente? Se sim, cite um exemplo.</p>
  </li>
</ul>
:ET