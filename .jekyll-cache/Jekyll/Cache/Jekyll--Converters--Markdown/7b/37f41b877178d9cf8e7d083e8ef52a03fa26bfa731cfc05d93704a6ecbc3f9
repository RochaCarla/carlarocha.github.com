I"˛<ul>
  <li>blocos?</li>
</ul>

<p>Bloco s√£o trechos de c√≥digo que existem dentro de uma express√£o <code class="highlighter-rouge">do..end</code>. Blocos s√£o uma forma de agrupar express√µes. Um bloco √© somente executado quando sua instru√ß√£o .</p>

<p>Embora blocos sejam comumente delimitados entre um <code class="highlighter-rouge">do..end</code>, blocos de uma √∫nica linha podem ser delimitados por chaves <code class="highlighter-rouge">{}</code>.</p>

<p>Blocos, assim como m√©todos, podem conter seus pr√≥prios argumentos. Diferente de m√©todos, blocos n√£o tem nome (e tamb√©m n√£o s√£o associados a nenhum objeto).</p>

<p>https://medium.com/@baweaver/functional-programming-in-ruby-state-5e55d40b4e67
https://medium.com/@heyamberwilkie/functional-programming-in-ruby-for-people-who-dont-know-what-functional-programming-is-f0c4ab7dc68c
https://www.rubyguides.com/2018/01/functional-programming-ruby/</p>

<h2 id="exerc√≠cios-de-fixa√ß√£o">Exerc√≠cios de fixa√ß√£o</h2>

<ul>
  <li>Fa√ßa um programa que dado um inteiro, retorne o inverso desse inteiro. Por exemplo, o inverso do inteiro <code class="highlighter-rouge">123</code> √© o inteiro <code class="highlighter-rouge">321</code>. N√£o use vari√°veis para armazenar resultados intermedi√°rios.</li>
</ul>
:ET